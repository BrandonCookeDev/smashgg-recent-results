{
"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "",
	"Metadata": {

	},
	"Parameters": {
		"codeS3Bucket": {
			"Type": "String",
			"Description": "S3 Bucket in which the code for the Lambda is stored"
		},
		"codeS3Key":{
			"Type": "String",
			"Description": "Key in the S3 bucket that points to the code to be deployed on Lambda"
		},
		"codeS3ObjectVersion": {
			"Type": "String",
			"Description": "Version of the code to be deployed to Lambda"
		},
		"codeS3ZipFile": {
			"Type": "String",
			"Description": "Name of the Zip File to be ported to Lambda"
		}
	},
	"Mappings": {

	},
	"Conditions": {

	},
	"Resources": {
				
		"smashggRecentResultsLambdaRole": {
		   "Type": "AWS::IAM::Role",
		   "Properties": {
			  "AssumeRolePolicyDocument": { 

			   },
			  "Path": "",
			  "Policies": [ 
					{
						"Sid": "CreateFunctionPermissions",
            "Effect": "Allow",
            "Action": [
								"lambda:ListFunctions",
								"lambda:CreateFunction",
								"lambda:InvokeFunction",
								"cloudwatch:GetMetricStatistics",
								"cloudwatchlog:DescribeLogGroups",
                "cloudwatchlog:DescribeLogStreams",
                "cloudwatchlog:GetLogEvents"
            ],
            "Resource": "*"
					}
			   ]
		   }
		},

		"smasggRecentResultsLambda": {
		  "Type": "AWS::Lambda::Function",
		  "Properties": {
			"Code": {
			  "S3Bucket": {"Ref": "codeS3Bucket"},
			  "S3Key": {"Ref": "codeS3Key"},
			  "S3ObjectVersion": {"Ref": "codeS3ObjectVersion"},
			  "ZipFile": {"Ref": "codeS3ZipFile"}
			},
			"Handler": "main.handler",
			"Role": { "Ref": "lambdaRole" },
			"Runtime": "Node8.10",
			"FunctionName": "smashgg-recent-results",
			"MemorySize": 128,
			"Timeout": 5,
			"KmsKeyArn": "",
			"Environment": {
			  "Variables": { }
			},
			"VpcConfig": {
			  "SecurityGroupIds": [ ],
			  "SubnetIds": [ ]
			},
			"Description": "Lambda function to fetch sets that were recently completed in a smashgg tournament or event"
		  }
		},

		"smashggRecentResultsApi": {
			"Type": "AWS::ApiGateway::RestApi",
			"DependsOn": ["smashggRecentResultsLambda"],
			"Properties": {
				"Name": "smashgg-recent-results"
			}
		},

		"smashggRecentResultsApiMethod": {
			"Type" : "AWS::ApiGateway::Method",
			"DependsOn": ["smashggRecentResultsApi", "smashggRecentResultsLambda"],
			"Properties" : {
				"ApiKeyRequired" : "false",
				"AuthorizationType" : "",
				"AuthorizerId" : "",
				"Integration": {
					"Type": "AWS",
					"IntegrationHttpMethod": "POST",
					"Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["smashggRecentResultsLambda", "Arn"]}, "/invocations"]]}
				},
				"MethodResponses" : [ ],
				"OperationName" : "smashgg-recent-results",
				"RequestModels" : { },
				"RequestParameters" : { },
				"RequestValidatorId" : "",
				"ResourceId" : "",
				"RestApiId": {"Ref": "smashggRecentResultsApi"}
			}
		},

		"RestApiDeployment": {
			"Type": "AWS::ApiGateway::Deployment",
			"DependsOn": ["smashggRecentResultsApi", "smashggRecentResultsApiMethod", "smashggRecentResultsLambda"],
			"Properties": {
				"RestApiId": {"Ref": "smashggRecentResultsApiGateway"},
				"StageName": "v1"
			}
		}
		
	},
	"Outputs": {

	}
}